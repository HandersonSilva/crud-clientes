# Place your Github Actions workflow configurations in project_dir/.github/workflows/
#
# This configuration requires the following 4 repository secret variables:
# PRIVATE_KEY (which will contain the content of the private key for your repository. Either reuse the one from earlier, or better, make a new one.)
# KNOWN_HOSTS (contains a hash identifying the remote server as the genuine one. You will have the hash for the server in your local .ssh directory in the file known_hosts if you have connected to it before.)
# TARGET_HOST (the url for server when connecting with SSH. On one.com it has the form ssh.example.com)
# TARGET_USER (the SSH user for connecting to a remote server. On one.com the domain-name serves as the username, so it has the form of example.com).
#
# You are also required to update host_name for the SSH configuration on line 35 to match up with the host specified in your Deployer recipe.

on:
  push:
    branches:
      - main
name: Create Image arm64
jobs:
  web-deploy:
    name: Build and push image to docker hub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'known_hosts'
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.TARGET_HOST }} >> ~/.ssh/known_hosts
      - name: Create File host deployer
        run: echo -e 'production:\n  hostname:' ${{ secrets.TARGET_HOST }}'\n  stage:' main'  \n  deploy_path:' ${{ secrets.DEPLOYER_PATH }}'\n  user:' ${{ secrets.TARGET_USER }} >> deployment/hosts.yml
      - name: Adding host in deploy
        run: cat deployment/hosts.yml
      - name: Test SSH connection
        run: ssh ubuntu@${{ secrets.TARGET_HOST }} ls -l ${{ secrets.DEPLOYER_PATH }}
      - name: Set Up Deployer
        run: curl -LO https://deployer.org/deployer.phar && mv deployer.phar /usr/local/bin/dep && sudo chmod +x /usr/local/bin/dep
      - name: Build image with Deployer
        run: dep deploy -vvv production